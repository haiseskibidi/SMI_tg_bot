from typing import Dict, Optional, Any
from loguru import logger


class DigestInterface:
    
    def __init__(self, bot: "TelegramBot"):
        self.bot = bot
    
    async def show_digest_menu(self):
        try:
            text = (
                "üì∞ <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–π–¥–∂–µ—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π</b>\n\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –¥–∞–π–¥–∂–µ—Å—Ç–∞:"
            )
            
            keyboard = [
                [{"text": "üìÖ –ó–∞ 3 –¥–Ω—è", "callback_data": "digest_period_3"}],
                [{"text": "üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", "callback_data": "digest_period_7"}], 
                [{"text": "üìÖ –ó–∞ 2 –Ω–µ–¥–µ–ª–∏", "callback_data": "digest_period_14"}],
                [{"text": "üîó –í–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª", "callback_data": "digest_channel_link"}],
                [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "start"}]
            ]
            
            await self.bot.keyboard_builder.send_message_with_keyboard(
                text, keyboard, use_reply_keyboard=False
            )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –¥–∞–π–¥–∂–µ—Å—Ç–∞: {e}")
    
    async def handle_period_selection(self, days: int):
        try:
            await self.bot.send_message(f"üì∞ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–π–¥–∂–µ—Å—Ç –∑–∞ {days} –¥–Ω–µ–π...")
            
            if hasattr(self.bot.basic_commands, 'digest_generator') and self.bot.basic_commands.digest_generator:
                digest_result = await self.bot.basic_commands.digest_generator.generate_weekly_digest(days=days)
                await self.bot.send_message(digest_result)
            else:
                await self.bot.send_message("‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {e}")
            await self.bot.send_message(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {e}")
    
    async def handle_channel_link_request(self):
        await self.bot.send_message(
            "üîó <b>–î–∞–π–¥–∂–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞</b>\n\n" 
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è live-–∞–Ω–∞–ª–∏–∑–∞:\n"
            "‚Ä¢ <code>https://t.me/channel_name</code>\n"
            "‚Ä¢ <code>@channel_name</code>"
        )