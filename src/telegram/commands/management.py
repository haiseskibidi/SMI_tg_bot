from __future__ import annotations

from typing import Any, Dict, Optional
from datetime import datetime
import pytz


class ManagementCommands:
    def __init__(self, bot: "TelegramBot") -> None:
        self.bot = bot

    async def manage_channels(self, message: Optional[Dict[str, Any]]) -> None:
        try:
            channels_data = await self.bot.get_all_channels_grouped()
            
            if not channels_data:
                keyboard = [
                    [{"text": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª", "callback_data": "add_channel"}],
                    [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "start"}]
                ]
                
                chat_id = message.get("chat", {}).get("id") if message else self.bot.admin_chat_id
                to_group = self.bot.is_message_from_group(chat_id) if chat_id else None
                
                await self.bot.send_message_with_keyboard(
                    "üìÇ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏</b>\n\n"
                    "‚ùå –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n\n"
                    "–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!",
                    keyboard,
                    use_reply_keyboard=False,
                    to_group=to_group
                )
                return
            
            await self.bot.channel_callbacks.show_channels_management(channels_data, message)
            
        except Exception as e:
            await self.bot.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤: {e}")

    async def stats(self, message: Optional[Dict[str, Any]]) -> None:
        try:
            if not self.bot.monitor_bot or not self.bot.monitor_bot.database:
                await self.bot.send_message("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
                return
            
            stats = await self.bot.monitor_bot.database.get_today_stats()
            
            stats_text = (
                "üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è</b>\n\n"
                f"üì∞ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: <b>{stats['total_messages']}</b>\n"
                f"üì§ –û—Ç–æ–±—Ä–∞–Ω–æ: <b>{stats['selected_messages']}</b>\n"
                f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–±–æ—Ä–∞: <b>{(stats['selected_messages'] / max(stats['total_messages'], 1) * 100):.1f}%</b>\n\n"
                f"üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now(pytz.timezone('Asia/Vladivostok')).strftime('%d.%m.%Y %H:%M:%S')}"
            )
            
            keyboard = [
                [
                    {"text": "üìä –°—Ç–∞—Ç—É—Å", "callback_data": "status"},
                    {"text": "üóÇÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏", "callback_data": "manage_channels"}
                ],
                [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "start"}]
            ]
            
            chat_id = message.get("chat", {}).get("id") if message else self.bot.admin_chat_id
            to_group = self.bot.is_message_from_group(chat_id) if chat_id else None
            await self.bot.send_message_with_keyboard(stats_text, keyboard, use_reply_keyboard=False, to_group=to_group)
            
        except Exception as e:
            await self.bot.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

    async def settings(self, message: Optional[Dict[str, Any]]) -> None:
        delete_status = "üü¢ –í–∫–ª—é—á–µ–Ω–æ" if self.bot.delete_commands else "üî¥ –í—ã–∫–ª—é—á–µ–Ω–æ"
        edit_status = "üü¢ –í–∫–ª—é—á–µ–Ω–æ" if self.bot.edit_messages else "üî¥ –í—ã–∫–ª—é—á–µ–Ω–æ"
        
        settings_text = (
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</b>\n\n"
            f"üóëÔ∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥:</b> {delete_status}\n"
            f"üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:</b> {edit_status}\n\n"
            "üîß <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n"
            "‚Ä¢ <b>–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥</b> - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—Ç—å –≤–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫\n"
            "‚Ä¢ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π</b> - –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö\n\n"
            "üí° <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –í–∫–ª—é—á–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞"
        )
        
        keyboard = [
            [
                {"text": f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ: {delete_status}", "callback_data": "toggle_delete"},
                {"text": f"üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {edit_status}", "callback_data": "toggle_edit"}
            ],
            [{"text": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "start"}]
        ]
        
        chat_id = message.get("chat", {}).get("id") if message else self.bot.admin_chat_id
        to_group = self.bot.is_message_from_group(chat_id) if chat_id else None
        await self.bot.send_message_with_keyboard(settings_text, keyboard, use_reply_keyboard=False, to_group=to_group)

