#!/usr/bin/env python3
"""
üìù –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –±–µ–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞–Ω–∞–ª–æ–≤
"""

import asyncio
from src.database import DatabaseManager
from src.telegram_bot import TelegramBot
import yaml
from datetime import datetime
from loguru import logger

async def add_manual_news():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"""
    
    print("üìù –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏")
    print("=" * 40)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open('../config/config.yaml', 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    db = DatabaseManager("news_monitor.db")
    await db.initialize()
    
    bot = TelegramBot(
        token=config['bot']['token'],
        chat_id=config['bot']['chat_id']
    )
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
    print("\nüí¨ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:")
    
    title = input("üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: ").strip()
    if not title:
        print("‚ùå –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return
    
    text = input("üìÑ –¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏: ").strip()
    if not text:
        print("‚ùå –¢–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return
    
    source = input("üìç –ò—Å—Ç–æ—á–Ω–∏–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '–†—É—á–Ω–æ–π –≤–≤–æ–¥'): ").strip() or "–†—É—á–Ω–æ–π –≤–≤–æ–¥"
    region = input("üåç –†–µ–≥–∏–æ–Ω (sakhalin/kamchatka/other): ").strip() or "other"
    url = input("üîó –°—Å—ã–ª–∫–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    now = datetime.now()
    message_data = {
        "id": f"manual_{int(now.timestamp())}",
        "channel_username": "@manual",
        "channel_name": source,
        "channel_title": source,
        "text": text,
        "date": now,
        "created_at": now,
        "views": 1,
        "reactions_count": 0,
        "url": url if url else None,
        "message_id": int(now.timestamp()),
        "processed": True,
        "ai_suitable": True,
        "selected_for_output": True,  # –í—Å–µ–≥–¥–∞ –æ—Ç–±–∏—Ä–∞–µ–º —Ä—É—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
        "ai_analysis": f'{{"title": "{title}", "summary": "{text[:100]}...", "region": "{region}"}}',
        "ai_score": 10,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è —Ä—É—á–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
        "ai_priority": "high",
        "content_hash": f"manual_{now.timestamp()}"
    }
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        await db.save_message(message_data)
        print(f"\n‚úÖ –ù–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞: {title}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if await bot.test_connection():
            message = f"üì∞ **–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞**\n\n**{title}**\n\n{text}"
            if url:
                message += f"\n\nüîó [–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é]({url})"
            message += f"\n\nüìç {source}"
            
            await bot.send_message(message)
            print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ bot token)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}")
    finally:
        await db.close()

if __name__ == "__main__":
    asyncio.run(add_manual_news())
