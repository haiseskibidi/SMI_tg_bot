#!/usr/bin/env python3
"""
üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞–Ω–∞–ª–æ–≤
–í–ê–ñ–ù–û: –ë–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å –∫–∞–Ω–∞–ª—ã, –Ω—É–∂–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç
"""

import asyncio
import yaml
from telethon import TelegramClient
from loguru import logger
import os
from pathlib import Path

async def setup_user_authentication():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤"""
    
    print("üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–∞–Ω–∞–ª–æ–≤")
    print("=" * 60)
    print()
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å)
    current_dir = Path(__file__).resolve().parent
    repo_root = current_dir.parent if (current_dir.parent / 'config').exists() else current_dir
    config_path = repo_root / 'config' / 'config.yaml'
    
    print(f"üîó –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_path}")
    with open(config_path, 'r', encoding='utf-8') as f:
        config = yaml.safe_load(f)
    
    api_id = config['telegram']['api_id']
    api_hash = config['telegram']['api_hash']
    
    print(f"üì± API ID: {api_id}")
    print(f"üîë API Hash: {api_hash[:10]}...")
    print()
    
    try:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ù–ï —É–¥–∞–ª—è–µ–º —Å–µ—Å—Å–∏—é, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–≤–æ—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        # –í–∫–ª—é—á–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –º–æ–∂–Ω–æ, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ RESET_TELETHON_SESSION=1 –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        delete_sessions = str(os.getenv('RESET_TELETHON_SESSION', '0')).lower() in ('1', 'true', 'yes')
        if delete_sessions:
            # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Å–µ—Å—Å–∏–∏
            current_dir = Path(__file__).resolve().parent
            repo_root = current_dir.parent if (current_dir.parent / 'config').exists() else current_dir
            sessions_dir = repo_root / 'sessions'
            session_file = sessions_dir / 'news_monitor_session.session'
            try:
                if session_file.exists():
                    session_file.unlink()
                    print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —Å–µ—Å—Å–∏—è: {session_file}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é: {e}")
        else:
            print("üîí –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è: –∞–≤—Ç–æ-—É–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ RESET_TELETHON_SESSION=1 –¥–ª—è –æ—á–∏—Å—Ç–∫–∏)")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞)
        current_dir = Path(__file__).resolve().parent
        # –ò—â–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ (–≥–¥–µ –µ—Å—Ç—å config/, src/, requirements.txt)
        repo_root = current_dir.parent if (current_dir.parent / 'config').exists() else current_dir
        sessions_dir = repo_root / 'sessions'
        sessions_dir.mkdir(exist_ok=True)
        session_path = sessions_dir / 'news_monitor_session'
        
        print(f"üîó –ü—É—Ç—å –∫ —Å–µ—Å—Å–∏–∏: {session_path}")
        client = TelegramClient(str(session_path), api_id, api_hash)
        
        print("üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...")
        print("üí° –í–ê–ñ–ù–û: –í–≤–æ–¥–∏—Ç–µ –ù–û–ú–ï–† –¢–ï–õ–ï–§–û–ù–ê, –∞ –ù–ï bot token!")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        await client.start()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        me = await client.get_me()
        
        if hasattr(me, 'phone') and me.phone:
            print("‚úÖ –£–°–ü–ï–®–ù–û! –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} {me.last_name or ''}")
            print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone}")
            print()
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É SMIzametki
            test_channel = "@SMIzametki"
            print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–∞–Ω–∞–ª—É {test_channel}...")
            
            try:
                entity = await client.get_entity(test_channel)
                print(f"‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {entity.title}")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                count = 0
                async for message in client.iter_messages(entity, limit=3):
                    if message.text:
                        count += 1
                        print(f"üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ {count}: {message.text[:80]}...")
                
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
                print()
                print("üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê! –¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ—Å—Ç–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")
                
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ü–æ–¥–∫–ª—é—á–µ–Ω –±–æ—Ç, –∞ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            print("üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        
        await client.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
        print()
        print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏ –≤ config.yaml")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤–≤–æ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∞ –Ω–µ bot token")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")

if __name__ == "__main__":
    asyncio.run(setup_user_authentication())
